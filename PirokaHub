--[=[
    PirokaHub UI Library
    Convertido por Gemini
]=]

local PirokaHub = {}
local Elements = {}

-- Main ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "PirokaHub"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

-- Main GUI Frame
local PirokaHubFrame = Instance.new("Frame")
PirokaHubFrame.Name = "Piroka Hub"
PirokaHubFrame.Size = UDim2.new(0.36274, 0, 0.50592, 0)
PirokaHubFrame.Position = UDim2.new(0.32326, 0, 0.10841, 0)
PirokaHubFrame.BackgroundColor3 = Color3.fromRGB(103, 52, 4)
PirokaHubFrame.BackgroundTransparency = 0.5
PirokaHubFrame.BorderSizePixel = 0
PirokaHubFrame.Parent = ScreenGui

-- Draggable functionality
local dragging
local dragOffset
local mover = Instance.new("TextButton")
mover.Text = "Piroka Hub"
mover.Size = UDim2.new(1, 0, 0.08, 0)
mover.Position = UDim2.new(0, 0, 0, 0)
mover.BackgroundColor3 = PirokaHubFrame.BackgroundColor3
mover.BackgroundTransparency = 0.2
mover.Font = Enum.Font.SourceSans
mover.TextSize = 16
mover.TextColor3 = Color3.new(1,1,1)
mover.Parent = PirokaHubFrame

mover.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragOffset = input.Position - PirokaHubFrame.AbsolutePosition
        mover.CaptureFocus = true
    end
end)

mover.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
        mover.CaptureFocus = false
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        PirokaHubFrame.Position = UDim2.new(0, input.Position.X - dragOffset.X, 0, input.Position.Y - dragOffset.Y)
    end
end)

-- Tab ScrollingFrame
local TabsContainer = Instance.new("ScrollingFrame")
TabsContainer.Name = "Tabs"
TabsContainer.Size = UDim2.new(0.47619, 0, 1, 0)
TabsContainer.Position = UDim2.new(0, 0, 0.08, 0)
TabsContainer.BackgroundColor3 = PirokaHubFrame.BackgroundColor3
TabsContainer.BackgroundTransparency = 0.5
TabsContainer.BorderSizePixel = 0
TabsContainer.ScrollBarThickness = 0
TabsContainer.ScrollingDirection = Enum.ScrollingDirection.Y
TabsContainer.Parent = PirokaHubFrame

local tabsLayout = Instance.new("UIListLayout")
tabsLayout.Name = "UIListLayout"
tabsLayout.Padding = UDim.new(0, 5)
tabsLayout.SortOrder = Enum.SortOrder.LayoutOrder
tabsLayout.Parent = TabsContainer

-- Elements ScrollingFrame
local ElementsContainer = Instance.new("ScrollingFrame")
ElementsContainer.Name = "Elements"
ElementsContainer.Size = UDim2.new(0.52381, 0, 1, 0)
ElementsContainer.Position = UDim2.new(0.47619, 0, 0.08, 0)
ElementsContainer.BackgroundColor3 = PirokaHubFrame.BackgroundColor3
ElementsContainer.BackgroundTransparency = 1
ElementsContainer.BorderSizePixel = 0
ElementsContainer.ScrollBarThickness = 0
ElementsContainer.ScrollingDirection = Enum.ScrollingDirection.Y
ElementsContainer.Parent = PirokaHubFrame

local elementsLayout = Instance.new("UIListLayout")
elementsLayout.Name = "UIListLayout"
elementsLayout.Padding = UDim.new(0, 5)
elementsLayout.SortOrder = Enum.SortOrder.LayoutOrder
elementsLayout.Parent = ElementsContainer

local pages = {}

function PirokaHub:AddPage(name)
    local pageFrame = Instance.new("Frame")
    pageFrame.Name = name
    pageFrame.Size = UDim2.new(1, 0, 0, 0)
    pageFrame.AutomaticSize = Enum.AutomaticSize.Y
    pageFrame.BackgroundTransparency = 1
    pageFrame.Visible = false
    pageFrame.Parent = ElementsContainer

    local pageLayout = Instance.new("UIListLayout")
    pageLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    pageLayout.VerticalAlignment = Enum.VerticalAlignment.Top
    pageLayout.Padding = UDim.new(0, 5)
    pageLayout.SortOrder = Enum.SortOrder.LayoutOrder
    pageLayout.Parent = pageFrame

    pages[name] = pageFrame
    return pageFrame
end

function PirokaHub:AddTab(name, page)
    local tabButton = Instance.new("TextButton")
    tabButton.Name = "Tab_" .. name
    tabButton.Size = UDim2.new(1, 0, 0, 30)
    tabButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    tabButton.BackgroundTransparency = 0.7
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.Text = name
    tabButton.Parent = TabsContainer

    local tabCorner = Instance.new("UICorner")
    tabCorner.Parent = tabButton

    tabButton.MouseButton1Click:Connect(function()
        for _, otherPage in pairs(pages) do
            otherPage.Visible = false
        end
        page.Visible = true
    end)
    
    return tabButton
end

function PirokaHub:AddCategory(text)
    local categoryFrame = Instance.new("Frame")
    categoryFrame.Name = "Category"
    categoryFrame.Size = UDim2.new(1, 0, 0, 25)
    categoryFrame.BackgroundTransparency = 0.8
    categoryFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)

    local categoryLabel = Instance.new("TextLabel")
    categoryLabel.Size = UDim2.new(1, 0, 1, 0)
    categoryLabel.BackgroundTransparency = 1
    categoryLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    categoryLabel.Text = text
    categoryLabel.TextSize = 14
    categoryLabel.Parent = categoryFrame

    return categoryFrame
end

function PirokaHub:AddLine()
    local lineFrame = Instance.new("Frame")
    lineFrame.Name = "Line"
    lineFrame.Size = UDim2.new(1, 0, 0, 2)
    lineFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    lineFrame.BackgroundTransparency = 0.8

    return lineFrame
end

function PirokaHub:AddLabel(text)
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, 0, 0, 20)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Text = text
    label.TextSize = 12
    label.Parent = elements.Label

    return label
end

function PirokaHub:AddLink(text, image, redirectable, copyable)
    local linkFrame = Instance.new("Frame")
    linkFrame.Name = "Link"
    linkFrame.Size = UDim2.new(1, 0, 0, 50)
    linkFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    linkFrame.BackgroundTransparency = 0.8

    local linkLabel = Instance.new("TextLabel")
    linkLabel.Name = "LinkText"
    linkLabel.Size = UDim2.new(0.75, 0, 0.5, 0)
    linkLabel.Position = UDim2.new(0.01, 0, 0.1, 0)
    linkLabel.BackgroundTransparency = 1
    linkLabel.TextColor3 = Color3.fromRGB(29, 147, 255)
    linkLabel.Text = text
    linkLabel.TextSize = 10
    linkLabel.TextXAlignment = Enum.TextXAlignment.Left
    linkLabel.Parent = linkFrame

    local imageLabel = Instance.new("ImageLabel")
    imageLabel.Size = UDim2.new(0.18, 0, 0.6, 0)
    imageLabel.Position = UDim2.new(0.77, 0, 0.1, 0)
    imageLabel.Image = image
    imageLabel.BackgroundTransparency = 1
    imageLabel.Parent = linkFrame

    local copyButton = Instance.new("TextButton")
    copyButton.Size = UDim2.new(0.45, 0, 0.3, 0)
    copyButton.Position = UDim2.new(0.01, 0, 0.65, 0)
    copyButton.BackgroundColor3 = Color3.fromRGB(92, 255, 67)
    copyButton.BackgroundTransparency = 0.5
    copyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    copyButton.Text = "Copiar"
    copyButton.Parent = linkFrame

    local redirectButton = Instance.new("TextButton")
    redirectButton.Size = UDim2.new(0.5, 0, 0.3, 0)
    redirectButton.Position = UDim2.new(0.49, 0, 0.65, 0)
    redirectButton.BackgroundColor3 = Color3.fromRGB(109, 109, 109)
    redirectButton.BackgroundTransparency = 0.5
    redirectButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    redirectButton.Text = "Redirecionar"
    redirectButton.Parent = linkFrame

    if copyable then
        copyButton.MouseButton1Click:Connect(function()
            setclipboard(text)
        end)
    else
        copyButton.Visible = false
    end

    if redirectable then
        redirectButton.MouseButton1Click:Connect(function()
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Redirecting...",
                Text = "Attempting to open " .. text
            })
            game.Workspace.Parent.Parent.Parent.CoreGui:FindFirstChild("CoreGuiScript"):FindFirstChild("OpenUrl"):Fire(text)
        end)
    else
        redirectButton.Visible = false
    end

    return linkFrame
end

function PirokaHub:AddTextbox(text, defaultText, callback)
    local textboxFrame = Instance.new("Frame")
    textboxFrame.Name = "Textbox"
    textboxFrame.Size = UDim2.new(1, 0, 0, 30)
    textboxFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    textboxFrame.BackgroundTransparency = 0.8

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.77, 0, 1, 0)
    label.Position = UDim2.new(0.01, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Text = text
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextSize = 10
    label.Parent = textboxFrame

    local textbox = Instance.new("TextBox")
    textbox.Name = "Valor"
    textbox.Size = UDim2.new(0.18, 0, 0.6, 0)
    textbox.Position = UDim2.new(0.79, 0, 0.2, 0)
    textbox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    textbox.BackgroundTransparency = 0.5
    textbox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textbox.Text = defaultText
    textbox.TextSize = 10
    textbox.Parent = textboxFrame

    textbox.FocusLost:Connect(function()
        if callback then
            callback(textbox.Text)
        end
    end)
    
    return textboxFrame
end

function PirokaHub:AddSlider(text, defaultValue, min, max, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = "Slider"
    sliderFrame.Size = UDim2.new(1, 0, 0, 50)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    sliderFrame.BackgroundTransparency = 0.8

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.77, 0, 0.5, 0)
    label.Position = UDim2.new(0.01, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Text = text
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextSize = 10
    label.Parent = sliderFrame

    local valueBox = Instance.new("TextBox")
    valueBox.Name = "Valor"
    valueBox.Size = UDim2.new(0.09, 0, 0.4, 0)
    valueBox.Position = UDim2.new(0.89, 0, 0.1, 0)
    valueBox.BackgroundTransparency = 0.5
    valueBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    valueBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    valueBox.Text = tostring(defaultValue)
    valueBox.TextSize = 10
    valueBox.Parent = sliderFrame

    local line = Instance.new("Frame")
    line.Name = "Linha"
    line.Size = UDim2.new(0.95, 0, 0, 3)
    line.Position = UDim2.new(0.02, 0, 0.75, 0)
    line.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    line.Parent = sliderFrame

    local filledLine = Instance.new("Frame")
    filledLine.Name = "Linha2"
    filledLine.Size = UDim2.new(0, 0, 1, 0)
    filledLine.Position = UDim2.new(0, 0, 0, 0)
    filledLine.BackgroundColor3 = Color3.fromRGB(54, 255, 15)
    filledLine.Parent = line

    local ball = Instance.new("Frame")
    ball.Name = "Bola"
    ball.Size = UDim2.new(0, 10, 0, 10)
    ball.Position = UDim2.new(0, 0, 0, -3.5)
    ball.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ball.ZIndex = 2
    ball.Parent = line

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(1, 0)
    corner.Parent = ball

    local drag = false
    local function update(pos)
        local value = math.floor((pos / line.AbsoluteSize.X) * (max - min) + min)
        value = math.max(min, math.min(max, value))
        local x = (value - min) / (max - min)
        ball.Position = UDim2.new(x, 0, 0, -3.5)
        filledLine.Size = UDim2.new(x, 0, 1, 0)
        valueBox.Text = tostring(value)
        if callback then
            callback(value)
        end
    end

    ball.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            drag = true
        end
    end)
    
    ball.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            drag = false
        end
    end)
    
    line.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            update(input.Position.X - line.AbsolutePosition.X)
            drag = true
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if drag and input.UserInputType == Enum.UserInputType.MouseMovement then
            update(input.Position.X - line.AbsolutePosition.X)
        end
    end)

    valueBox.FocusLost:Connect(function()
        local value = tonumber(valueBox.Text)
        if value then
            value = math.max(min, math.min(max, value))
            local x = (value - min) / (max - min)
            ball.Position = UDim2.new(x, 0, 0, -3.5)
            filledLine.Size = UDim2.new(x, 0, 1, 0)
            valueBox.Text = tostring(value)
            if callback then
                callback(value)
            end
        end
    end)

    -- Initial position
    local initialX = (defaultValue - min) / (max - min)
    ball.Position = UDim2.new(initialX, 0, 0, -3.5)
    filledLine.Size = UDim2.new(initialX, 0, 1, 0)

    return sliderFrame
end


function PirokaHub:AddButton(text, callback)
    local button = Instance.new("TextButton")
    button.Name = "Button"
    button.Size = UDim2.new(1, 0, 0, 30)
    button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    button.BackgroundTransparency = 0.8
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = text
    button.TextSize = 14
    button.Font = Enum.Font.SourceSans
    
    local corner = Instance.new("UICorner")
    corner.Parent = button

    button.MouseButton1Click:Connect(function()
        if callback then
            callback()
        end
    end)
    
    return button
end

function PirokaHub:AddToggle(text, initialState, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = "Toggle"
    toggleFrame.Size = UDim2.new(1, 0, 0, 30)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    toggleFrame.BackgroundTransparency = 0.8
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.Position = UDim2.new(0.01, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Text = text
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextSize = 12
    label.Parent = toggleFrame

    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "Button"
    toggleButton.Size = UDim2.new(0.2, 0, 0.7, 0)
    toggleButton.Position = UDim2.new(0.79, 0, 0.15, 0)
    toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    toggleButton.Text = ""
    toggleButton.Parent = toggleFrame
    
    local corner = Instance.new("UICorner")
    corner.Parent = toggleButton

    local state = initialState or false
    local function updateColor()
        if state then
            toggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        else
            toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        end
    end
    updateColor()

    toggleButton.MouseButton1Click:Connect(function()
        state = not state
        updateColor()
        if callback then
            callback(state)
        end
    end)
    
    return toggleFrame
end


function PirokaHub:AddDropdown(text, items, multiSelect, callback)
    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Name = "Dropdown"
    dropdownFrame.Size = UDim2.new(1, 0, 0, 30)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    dropdownFrame.BackgroundTransparency = 0.8

    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(0.77, 0, 1, 0)
    label.Position = UDim2.new(0.01, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Text = text
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextSize = 12
    label.Parent = dropdownFrame

    local dropdownButton = Instance.new("TextButton")
    dropdownButton.Name = "Button"
    dropdownButton.Size = UDim2.new(0.2, 0, 0.7, 0)
    dropdownButton.Position = UDim2.new(0.79, 0, 0.15, 0)
    dropdownButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    dropdownButton.BackgroundTransparency = 0.5
    dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropdownButton.Text = "▼"
    dropdownButton.Parent = dropdownFrame
    
    local corner = Instance.new("UICorner")
    corner.Parent = dropdownButton

    local itemsFrame = Instance.new("Frame")
    itemsFrame.Name = "ItemsFrame"
    itemsFrame.Size = UDim2.new(1, 0, 0, 0)
    itemsFrame.AutomaticSize = Enum.AutomaticSize.Y
    itemsFrame.Position = UDim2.new(0, 0, 1, 0)
    itemsFrame.BackgroundTransparency = 0.8
    itemsFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    itemsFrame.Visible = false
    itemsFrame.Parent = dropdownFrame
    
    local itemsLayout = Instance.new("UIListLayout")
    itemsLayout.Padding = UDim.new(0, 5)
    itemsLayout.SortOrder = Enum.SortOrder.LayoutOrder
    itemsLayout.Parent = itemsFrame

    local selectedItems = {}
    local function updateSelectedText()
        if #selectedItems > 0 then
            label.Text = table.concat(selectedItems, ", ")
        else
            label.Text = text
        end
    end

    local function addItem(itemText)
        local itemButton = Instance.new("TextButton")
        itemButton.Name = "Item"
        itemButton.Size = UDim2.new(1, 0, 0, 20)
        itemButton.BackgroundTransparency = 1
        itemButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        itemButton.Text = itemText
        itemButton.TextSize = 12
        itemButton.Parent = itemsFrame
        
        itemButton.MouseButton1Click:Connect(function()
            if multiSelect then
                local found = false
                for i, v in ipairs(selectedItems) do
                    if v == itemText then
                        table.remove(selectedItems, i)
                        found = true
                        break
                    end
                end
                if not found then
                    table.insert(selectedItems, itemText)
                end
            else
                selectedItems = {itemText}
                itemsFrame.Visible = false
            end
            updateSelectedText()
            if callback then
                callback(selectedItems)
            end
        end)
    end

    for _, item in ipairs(items) do
        addItem(item)
    end
    
    dropdownButton.MouseButton1Click:Connect(function()
        itemsFrame.Visible = not itemsFrame.Visible
        if itemsFrame.Visible then
            dropdownFrame.Size = UDim2.new(1, 0, 0, 30 + itemsFrame.AbsoluteSize.Y)
        else
            dropdownFrame.Size = UDim2.new(1, 0, 0, 30)
        end
    end)
    
    return dropdownFrame
end

function PirokaHub.Init()
    local mainPage = PirokaHub:AddPage("Main")
    local settingsPage = PirokaHub:AddPage("Settings")
    local infoPage = PirokaHub:AddPage("Info")

    PirokaHub:AddTab("Main", mainPage)
    PirokaHub:AddTab("Settings", settingsPage)
    PirokaHub:AddTab("Info", infoPage)

    PirokaHub:AddCategory("General Options"):SetParent(mainPage)

    PirokaHub:AddButton("Click Me!", function()
        print("Button clicked!")
    end):SetParent(mainPage)

    PirokaHub:AddToggle("Enable Feature", false, function(newState)
        print("Feature enabled: " .. tostring(newState))
    end):SetParent(mainPage)

    PirokaHub:AddSlider("Speed", 50, 0, 100, function(value)
        print("Speed set to: " .. value)
    end):SetParent(mainPage)

    PirokaHub:AddTextbox("Player Name", "Guest", function(text)
        print("Player name set to: " .. text)
    end):SetParent(mainPage)

    PirokaHub:AddLine():SetParent(mainPage)

    PirokaHub:AddLabel("Informacoes"):SetParent(infoPage)

    PirokaHub:AddLink("https://roblox.com", "rbxassetid://6253457591", true, true):SetParent(infoPage)

    PirokaHub:AddCategory("Settings"):SetParent(settingsPage)
    PirokaHub:AddDropdown("Game Mode", {"PvP", "PvE", "Free-for-all"}, false, function(selected)
        print("Game Mode selected: " .. selected[1])
    end):SetParent(settingsPage)

    -- Show the initial page
    mainPage.Visible = true
end

return PirokaHub
